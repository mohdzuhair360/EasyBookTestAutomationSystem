<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gUZAycYuUYTJgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAM/SURBVHhe
        7Zu7rw1RGMUHhUZURCeChkKjkHglClGIRiXx6AhCopCIVlQeiVdNoUD0/gGhQUSjEYnCq5EoxCME63dz
        9s3Yd82Zfa47x2z7rOTXfHe+vde6OfdM5pt9q4kmmihVy8QucUyc6CmHxUox5zonvopfmfBUHBdzooPC
        bZIDF8VfabX4JNziOfBTrBez1m3hFs6JO2JWWiQ+i3jBD+JVT8Fb7JcMZBlZ+0W8GGwUfRXenGeyjKx7
        Il7otZgn+iq84TH2TZaRtER8F/FCl0TfhcfYN1nIlKyjIl4ENom+C4/OO5mSdV/EC7wRff74B+ERr7F/
        MiVpueD+GS9wWeQivMb+yUS2Vp0ScTNsFrkIry4D2Vr1TMSNuXz8g5r+DMg2VGtF3ARXRG7Cs8tCxkad
        Fa5pi8hNeHZZyNiolyJueCvmi9yEZ7zHechotUHEF8NVkavw7jKRdYbcrQO2ilyFd5dpxi19gXgv4gvf
        iRw//kF4J0Oci6xkntZ2EV8E10TuIoPLRuZpXRfuon1iReaQwWUj85QWio/CXfQ/Q2ayV7sHhRIhe3W3
        VigNsldfaoXSILv9QUnYYknYYknYYgy3jJOCtyyLBePnM6IP3x94wAue8IZHvKbe2m2xzhPRNEpaI14I
        1zcO2BsPTnjGu+urY4sB3guuEsPEk9UP4fq7hD3tU11NeG97t2mLgaHDg5puCtffJeyZoqYhT8AWAztF
        ig4J198l7JkiMrj+gC0G1okU7RCuv0vYM0VkcP0BWwzsFSlqGqV3SdKIWyKD6w/YYuCWaBMj6AfC9XcJ
        e6aM6sng+gO2WGfqiWmIOIvj+sZB2zmglCddW6zDbcR94TBSOi2+Cdc3DtgbD3+MtwbCc8rxHlt0PBbn
        BQvz0uG5cNf9C/CCJ7zhEa/uOoctloQtloQtloQtloQtloQtloQtloQtloQtloQtloQtOh6KPZmAV5fB
        YYsOjs7nolGO+duio/hfQMpwpC9qG4LUscfLHRdELsKryxBD9upGrTCM1CFkH5Q6pCV7tVQ8GhQcHDJm
        yJCb8OwOfQfITPYpMVLaJo6I+j8iHhBNr55yEN7JUM9ERrK6MdpEE5WlqvoNrb+kPWKBBnQAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>